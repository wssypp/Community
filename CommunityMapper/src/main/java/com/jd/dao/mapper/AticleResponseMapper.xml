<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.dao.AticleResponseMapper" >
  <resultMap id="BaseResultMap" type="com.jd.pojo.AticleResponse" >
    <id column="aticle_response_id" property="aticleResponseId" jdbcType="INTEGER" />
    <result column="aticle_comment_id" property="aticleCommentId" jdbcType="INTEGER" />
    <result column="users_id" property="usersId" jdbcType="INTEGER" />
    <result column="aticle_response_time" property="aticleResponseTime" jdbcType="TIMESTAMP" />
    <result column="aticle_response_content" property="aticleResponseContent" jdbcType="VARCHAR" />
    <result column="aticle_response_img" property="aticleResponseImg" jdbcType="VARCHAR" />
    <result column="aticle_response_descr" property="aticleResponseDescr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    aticle_response_id, aticle_comment_id, users_id, aticle_response_time, aticle_response_content, 
    aticle_response_img, aticle_response_descr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jd.pojo.AticleResponseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aticle_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from aticle_response
    where aticle_response_id = #{aticleResponseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from aticle_response
    where aticle_response_id = #{aticleResponseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.pojo.AticleResponseExample" >
    delete from aticle_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.pojo.AticleResponse" >
    insert into aticle_response (aticle_response_id, aticle_comment_id, 
      users_id, aticle_response_time, aticle_response_content, 
      aticle_response_img, aticle_response_descr)
    values (#{aticleResponseId,jdbcType=INTEGER}, #{aticleCommentId,jdbcType=INTEGER}, 
      #{usersId,jdbcType=INTEGER}, #{aticleResponseTime,jdbcType=TIMESTAMP}, #{aticleResponseContent,jdbcType=VARCHAR}, 
      #{aticleResponseImg,jdbcType=VARCHAR}, #{aticleResponseDescr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jd.pojo.AticleResponse" >
    insert into aticle_response
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aticleResponseId != null" >
        aticle_response_id,
      </if>
      <if test="aticleCommentId != null" >
        aticle_comment_id,
      </if>
      <if test="usersId != null" >
        users_id,
      </if>
      <if test="aticleResponseTime != null" >
        aticle_response_time,
      </if>
      <if test="aticleResponseContent != null" >
        aticle_response_content,
      </if>
      <if test="aticleResponseImg != null" >
        aticle_response_img,
      </if>
      <if test="aticleResponseDescr != null" >
        aticle_response_descr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aticleResponseId != null" >
        #{aticleResponseId,jdbcType=INTEGER},
      </if>
      <if test="aticleCommentId != null" >
        #{aticleCommentId,jdbcType=INTEGER},
      </if>
      <if test="usersId != null" >
        #{usersId,jdbcType=INTEGER},
      </if>
      <if test="aticleResponseTime != null" >
        #{aticleResponseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aticleResponseContent != null" >
        #{aticleResponseContent,jdbcType=VARCHAR},
      </if>
      <if test="aticleResponseImg != null" >
        #{aticleResponseImg,jdbcType=VARCHAR},
      </if>
      <if test="aticleResponseDescr != null" >
        #{aticleResponseDescr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.pojo.AticleResponseExample" resultType="java.lang.Integer" >
    select count(*) from aticle_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update aticle_response
    <set >
      <if test="record.aticleResponseId != null" >
        aticle_response_id = #{record.aticleResponseId,jdbcType=INTEGER},
      </if>
      <if test="record.aticleCommentId != null" >
        aticle_comment_id = #{record.aticleCommentId,jdbcType=INTEGER},
      </if>
      <if test="record.usersId != null" >
        users_id = #{record.usersId,jdbcType=INTEGER},
      </if>
      <if test="record.aticleResponseTime != null" >
        aticle_response_time = #{record.aticleResponseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aticleResponseContent != null" >
        aticle_response_content = #{record.aticleResponseContent,jdbcType=VARCHAR},
      </if>
      <if test="record.aticleResponseImg != null" >
        aticle_response_img = #{record.aticleResponseImg,jdbcType=VARCHAR},
      </if>
      <if test="record.aticleResponseDescr != null" >
        aticle_response_descr = #{record.aticleResponseDescr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update aticle_response
    set aticle_response_id = #{record.aticleResponseId,jdbcType=INTEGER},
      aticle_comment_id = #{record.aticleCommentId,jdbcType=INTEGER},
      users_id = #{record.usersId,jdbcType=INTEGER},
      aticle_response_time = #{record.aticleResponseTime,jdbcType=TIMESTAMP},
      aticle_response_content = #{record.aticleResponseContent,jdbcType=VARCHAR},
      aticle_response_img = #{record.aticleResponseImg,jdbcType=VARCHAR},
      aticle_response_descr = #{record.aticleResponseDescr,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.pojo.AticleResponse" >
    update aticle_response
    <set >
      <if test="aticleCommentId != null" >
        aticle_comment_id = #{aticleCommentId,jdbcType=INTEGER},
      </if>
      <if test="usersId != null" >
        users_id = #{usersId,jdbcType=INTEGER},
      </if>
      <if test="aticleResponseTime != null" >
        aticle_response_time = #{aticleResponseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="aticleResponseContent != null" >
        aticle_response_content = #{aticleResponseContent,jdbcType=VARCHAR},
      </if>
      <if test="aticleResponseImg != null" >
        aticle_response_img = #{aticleResponseImg,jdbcType=VARCHAR},
      </if>
      <if test="aticleResponseDescr != null" >
        aticle_response_descr = #{aticleResponseDescr,jdbcType=VARCHAR},
      </if>
    </set>
    where aticle_response_id = #{aticleResponseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.pojo.AticleResponse" >
    update aticle_response
    set aticle_comment_id = #{aticleCommentId,jdbcType=INTEGER},
      users_id = #{usersId,jdbcType=INTEGER},
      aticle_response_time = #{aticleResponseTime,jdbcType=TIMESTAMP},
      aticle_response_content = #{aticleResponseContent,jdbcType=VARCHAR},
      aticle_response_img = #{aticleResponseImg,jdbcType=VARCHAR},
      aticle_response_descr = #{aticleResponseDescr,jdbcType=VARCHAR}
    where aticle_response_id = #{aticleResponseId,jdbcType=INTEGER}
  </update>
</mapper>